<template>
  <div class="home-tabs" style="margin-left: 10px">
    <el-tabs v-model="tabs"
             @tab-click="handleTabsChangeGetKaoshi">
      <el-tab-pane v-for="item in XueqiDataList"
                   :key="item.xueqi_id"
                   :prop="item.xueqi_id"
                   :label="item.xueqi_mingcheng"
                   :name="item.xueqi_id.toString()">
      </el-tab-pane>
    </el-tabs>

    <!--    教师信息表格-->
    <el-table ref="jiaoshiTable"
              border
              :data="KaoshiDataList"
              tooltip-effect="dark"
              style="width: auto"
              height="800px">
      <!--多选框-->
      <el-table-column type="selection" width="auto"></el-table-column>
      <el-table-column align="center" prop="kaoshi_shijian" label="考试时间" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_code" label="考试编号" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="xuexiao_mingcheng" label="学校名称" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_mingcheng" label="考试名称" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kemu_mingcheng" label="科目名称" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_changci" label="考试场次" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="jiaoshi_xingming" label="主管教师" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_canyujiaoshi" label="参与教师" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_renshu" label="考试人数" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_xueshengmingdan" label="学生名单" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_baoming" label="考试报名" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_timu" label="考试题目" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_tixing" label="考试题型" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_shijuan" label="考试试卷" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_dianzhenbi" label="点阵笔" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_dianzhenzhi" label="点阵纸" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_kaochangzhunbei" label="考场准备" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_zhuangtai" label="考试状态" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_beizhu" label="备注" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_chuangjianren" label="创建人" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_chuangjianshijian" label="创建时间" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_xiugairen" label="修改人" width="auto">
      </el-table-column>
      <el-table-column align="center" prop="kaoshi_xiugaishijian" label="修改时间" width="auto">
      </el-table-column>
<!--        <template slot-scope="{row,$index}">-->
<!--          <input class="edit-cell" v-if="showEdit[$index]" v-model="row.jiaoshi_xingming">-->
<!--          <span v-if="!showEdit[$index]">{{row.jiaoshi_xingming}}</span>-->
<!--        </template>-->
      <!--操作列-->
      <el-table-column align="center" label="操作" width="240px" fixed="right">
<!--        <template slot-scope="{row,$index}">-->
<!--          <el-button size="mini" @click.native="handleUpdate(row)" v-if="showBtn[$index]">-->
<!--            更新-->
<!--          </el-button>-->
<!--          <el-button size="mini" @click.native="handleCancle($index)" v-if="showBtn[$index]">-->
<!--            取消-->
<!--          </el-button>-->

<!--          <el-button size="mini" @click.native="handleEdit($index)" v-if="!showBtn[$index]">-->
<!--            编辑-->
<!--          </el-button>-->
          <!--删除提示-->
<!--          <el-popover placement="top" >-->
<!--            <h5 align="center">确定删除？</h5>-->
<!--            <div style="text-align: center; margin: 0">-->
<!--              <el-button type="danger" size="mini" @click="deleteRow(row)">确 定</el-button>-->
<!--            </div>-->
<!--            <el-button size="mini" slot="reference">删 除</el-button>-->
<!--          </el-popover>-->
<!--        </template>-->
      </el-table-column>
    </el-table>

    <!--分页-->
    <el-pagination
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
      :current-page="currentPage"
      :page-sizes="[10, 15, 20, 25]"
      :page-size="100"
      layout="total, sizes, prev, pager, next, jumper"
      :total="KaoshiDataList.length">
    </el-pagination>
  </div>
</template>

<script>
  export default {
    data() {
      return {
        tabs: '',
        XueqiDataList: [],
        KaoshiDataList: [],

        //分页
        // 默认显示第几页
        currentPage:1,
        // 总条数，根据接口获取数据长度(注意：这里不能为空)
        totalCount:1,
        // 个数选择器（可修改）
        pageSizes:[1,2,3,4],
        // 默认每页显示的条数（可修改）
        PageSize:10,
      };
    },

    mounted () {
      this.getAllXueqi();
    },

    methods: {
      //分页
      // 将页码，及每页显示的条数以参数传递提交给后台
      getData(n1,n2){
        // 这里使用axios，使用时请提前引入
        axios.post(url,{
            orgCode:1,
            // 每页显示的条数
            PageSize:n1,
            // 显示第几页
            currentPage:n2,
          },{emulateJSON: true},
          {
            headers:{"Content-Type": "application/x-www-form-urlencoded;charset=utf-8",}
          }
        ).then(reponse=>{
          console.log(reponse)
          // 将数据赋值给tableData
          this.tableData=data.data.body
          // 将数据的长度赋值给totalCount
          this.totalCount=data.data.body.length
        })
      },
      // 分页
      // 每页显示的条数
      handleSizeChange(val) {
        // 改变每页显示的条数
        this.PageSize=val
        // 点击每页显示的条数时，显示第一页
        this.getData(val,1)
        // 注意：在改变每页显示的条数时，要将页码显示到第一页
        this.currentPage=1
      },
      // 显示第几页
      handleCurrentChange(val) {
        // 改变默认的页数
        this.currentPage=val
        // 切换页码时，要获取每页显示的条数
        this.getData(this.PageSize,(val)*(this.pageSize))
      },
      created:function(){
        this.getData(this.PageSize,this.currentPage)
      },

      handleTabsChangeGetKaoshi (tab) {
        var getData = this;
        this.$axios.get('/kaowu/kaoshi/getAllByXueqiId', {
          params:{
            xueqi_id:tab.name
          }
        })
          .then((res) => {
            getData.KaoshiDataList = res.data.result;
          })
          .catch((err) =>{
            console.log(err);
            alert('获取考试信息失败！');
          })
      },

      //获取全部学期列表
      getAllXueqi() {
        var getData = this;
        this.$axios.get('manage/xueqi/getAll')
          .then((res) => {
            getData.XueqiDataList = res.data.result;
          })
          .catch((err) =>{
            console.log(err);
            alert('获取学期信息失败！');
          })
      },
    }
  };
</script>

<style scoped>

</style>
